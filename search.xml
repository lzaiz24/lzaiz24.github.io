<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机网络互联</title>
      <link href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94/"/>
      <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94/</url>
      
        <content type="html"><![CDATA[<h1 id="一、计算机之间的连接方式"><a href="#一、计算机之间的连接方式" class="headerlink" title="一、计算机之间的连接方式"></a>一、计算机之间的连接方式</h1><h2 id="1-两台计算机之间的互联"><a href="#1-两台计算机之间的互联" class="headerlink" title="1.两台计算机之间的互联"></a>1.两台计算机之间的互联</h2><ul><li>一级项目<ul><li>二级项目<ul><li>三级项目</li></ul></li><li>另一个二级项目</li></ul></li><li>另一个一级项目</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cs基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络和因特网</title>
      <link href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/"/>
      <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E5%9B%A0%E7%89%B9%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h2 id="一、计算机网络的组成"><a href="#一、计算机网络的组成" class="headerlink" title="一、计算机网络的组成"></a>一、计算机网络的组成</h2><h3 id="1-1网络的组成"><a href="#1-1网络的组成" class="headerlink" title="1.1网络的组成"></a>1.1网络的组成</h3><ul><li>网络是由节点、链路互连组成的</li></ul><p><img src="https://pic.imgdb.cn/item/653a661cc458853aef5e43a8.jpg" alt=""></p><h3 id="1-2互联网和因特网"><a href="#1-2互联网和因特网" class="headerlink" title="1.2互联网和因特网"></a>1.2互联网和因特网</h3><ul><li>若干网络通过路由器互连形成互联网</li></ul><p>不同的网络（异构网络）之间通过路由器连接<br><img src="https://pic.imgdb.cn/item/653a6660c458853aef5f8d74.jpg" alt=""></p><ul><li>因特网是当今世界上最大的互联网</li></ul><p><img src="https://pic.imgdb.cn/item/653a6676c458853aef5ff810.jpg" alt=""></p><h3 id="1-3互联网和因特网的关系"><a href="#1-3互联网和因特网的关系" class="headerlink" title="1.3互联网和因特网的关系"></a>1.3互联网和因特网的关系</h3><ul><li>internet <ul><li>通用名词、表示互联网（互连网），任意通信协议</li></ul></li><li>Internet <ul><li>专有名词，因特网，专指TCP/IP协议簇（TCP/IP协议簇是Internet的基础，也是当今最流行的组网形式。TCP/IP是一组协议的代名词，包括许多别的协议，组成了TCP/IP协议簇。）</li></ul></li><li>因特网服务提供商（Internet Service Provider，ISP）</li></ul><p><img src="https://pic.imgdb.cn/item/653a66a9c458853aef60e585.png" alt=""><br>各种网络互相之间进行的数据通信，各个异构网络通过路由器相连</p><h3 id="1-4因特网的标准化工作"><a href="#1-4因特网的标准化工作" class="headerlink" title="1.4因特网的标准化工作"></a>1.4因特网的标准化工作</h3><ul><li>因特网的标准化工作是面向公众的，其中任何一个建议标准在成为因特网标准之前都以RFC技术文档的形式在因特网上发表。</li></ul><p><img src="https://pic.imgdb.cn/item/653a66f5c458853aef625cdb.png" alt=""></p><h2 id="二、计算机网络端系统结构分层"><a href="#二、计算机网络端系统结构分层" class="headerlink" title="二、计算机网络端系统结构分层"></a>二、计算机网络端系统结构分层</h2><ul><li><code>分层</code>可将庞大复杂的问题转化为若干较小的局部问题</li></ul><p>重点记忆每一层</p><ul><li>OSI标准失败的原因： <ul><li>缺乏实际经验，没有商业驱动力</li><li>协议实现过分复杂，运行效率低</li><li>标准的制定周期太长，产品无法及时进入市场</li><li>层次划分不太理想，有些功能在多个层次中重复出现</li></ul></li><li>TCP/IP参考模型的成功： </li></ul><p><img src="https://pic.imgdb.cn/item/653a6705c458853aef62aa81.png" alt=""></p><h3 id="2-1物理层考虑的问题"><a href="#2-1物理层考虑的问题" class="headerlink" title="2.1物理层考虑的问题"></a>2.1物理层考虑的问题</h3><ul><li>采用什么传输媒介（介质）</li><li>采用什么物理接口</li><li>采用什么信号表示比特0和比特1</li></ul><h3 id="2-2链路层考虑的问题"><a href="#2-2链路层考虑的问题" class="headerlink" title="2.2链路层考虑的问题"></a>2.2链路层考虑的问题</h3><ul><li><strong>标识网络中各主机的身份（例如MAC地址）</strong></li></ul><p>MAC地址（Media Access Control Address，媒体访问控制地址），也叫物理地址或硬件地址，是一个唯一的标识符，通常由网络适配器（网卡）产生。它是一个48位的地址，通常用六组十六进制数表示，每组之间用冒号或短横线分隔开。例如：00-1A-2B-3C-4D-5E。</p><ul><li><strong>从比特流中区分出地址和数据（数据封装格式）</strong></li></ul><p>数据封装格式（data encapsulation format）是指在计算机网络中将数据信息按照一定格式进行打包和传送的方式。常见的数据封装格式有TCP/IP格式、HTTP格式等。<br>TCP/IP格式是指在传输控制协议（TCP）上加上网络协议（IP）的格式，用于在网络中传输数据。这个格式的特点是能够可靠地传输数据，并且具有错误重发机制。<br>HTTP格式是指超文本传输协议（HTTP）中数据的传输格式。这个格式主要用于在Web浏览器和Web服务器之间传输HTML页面、CSS、JavaScript等信息，可以通过HTTP请求和响应交换数据。<br>此外，还有一些其他的网络协议也有自己特定的数据封装格式，如传输文件协议（FTP）中的文件传输格式，电子邮件协议（SMTP）中的邮件传输格式等。</p><ul><li><strong>协调各主机争用总线（媒体接入控制）</strong></li></ul><p>媒体接入控制（Media Access Control，MAC）是计算机网络中一种控制机制，用于管理共享通信资源的方式。媒体接入控制通常用于网络中共享传输介质（如以太网、Wi-Fi等）上的数据传输。<br>在计算机网络中，媒体接入控制可以通过以下几种方式进行实现：<br>1.载波监听多点接入/碰撞检测（CSMA/CD）：在以太网中，节点必须等待其他节点停止发送数据，才能开始传输数据。如果两个节点同时发送数据，就会发生碰撞，然后两个节点随机等待一段时间后重新发送数据。<br>2.令牌传递（Token Passing）：在令牌传递中，一张令牌在网络中依次传递给每个节点。每个节点只有在获取到令牌时才能发送数据，并在数据传输完成后将令牌传递给下一个节点。<br>3.预约访问：预约访问是一种用于分配网络资源的协议，其中网络节点使用分时复用技术分配网络资源。节点按固定顺序请求访问网络，并被分配资源的时间。<br>4.载波监听多点接入/碰撞避免（CSMA/CA）：在无线网络中，节点必须等待其他节点停止发送数据，才能开始传输数据。如果两个节点同时发送数据，就会发生碰撞，然后每个节点需要等待一段时间后重新发送数据。<br>这些媒体接入控制方式可以根据所使用的协议和实现方式进行细分和分类，以满足不同类型计算机网络的需求。</p><ul><li><strong>以太网交换机的实现（自学习和转发帧）</strong></li></ul><p>在计算机网络中，自学习通常指网络设备自动学习网络拓扑和设备信息，以便更好地管理网络。例如，交换机使用自学习机制来学习MAC地址，以便把每个MAC地址和相应的接口关联起来，从而实现转发。当交换机接收到数据帧时，它会从数据帧中提取源MAC地址，并将该地址和数据帧接收的接口放入交换机的MAC地址表中。当需要将数据帧发送给目标设备时，交换机会根据目标MAC地址从MAC表中查找相应的接口，并将数据帧转发到该接口。这样就可以避免广播风暴和网络拥塞的情况发生。<br>除了交换机之外，路由器和其他网络设备也可以使用自学习机来自动学习和管理网络。通过自学习机制，网络设备可以快速适应变化的网络拓扑和设备配置，提高网络的可用性和性能。<br>转发帧（forwarding frames）是指网络通信中的一种数据传输方式。当一台计算机向另一台计算机发送数据时，数据被分成多个帧依次发送。每个帧都包含发送方和接收方的地址信息，以确保数据可以正确地发送到目的地。转发帧是指在网络中的路由器或交换机等网络设备上，将接收到的数据帧重新发送到下一个网络设备，以便数据可以到达目标设备。</p><ul><li><strong>检测数据是否误码（差错检测）</strong></li></ul><p>计算机网络链路层的差错检测方式有很多种，这里为您介绍几种常见的：</p><ol><li>奇偶校验：奇偶校验是在数据传输过程中添加一个校验位来判断数据传输是否发生错误，其原理是对数据位的二进制表示进行求和，如果求和结果为奇数，则在传输数据时将其奇偶校验位设为1，否则设为0。 </li><li>循环冗余校验（CRC）：CRC是一种广泛使用的差错检测技术，它通过生成一个多项式来对数据进行差错检测。发送端按照多项式对数据求余得到校验码，接收端收到数据后进行同样的操作，如果生成的校验码不一致则将出现差错。 </li><li>帧检验序列（FCS）：FCS在数据帧尾部添加了一个校验字段，计算方法与CRC类似，用于检测数据传输时是否发生了差错。 </li></ol><p>这些差错检测技术可以在链路层使用，可以检测出数据传输过程中是否发生了差错，保证数据传输的可靠性。</p><ul><li><strong>出现传输差错如何处理（可靠传输和不可靠传输）</strong></li></ul><p>在计算机网络中，传输数据包的方式可以分为可靠传输和不可靠传输。<br>可靠传输是指能够保证数据包在传输过程中不会丢失、损坏或重复，确保数据的完整性和正确性。可靠传输通常通过以下几种机制实现：<br>1.确认机制：接收方需要给发送方发送确认消息，告知数据包已经成功接收，如果发送方未收到确认信息，则需要重新发送数据包。<br>2.计时重传机制：如果接收方未在一定时间内返回确认消息，则发送方会重新发送数据包。<br>3.重复消除机制：网络中可能存在重复的数据包，因此需要在接收方使用缓存或按顺序处理数据包，以避免重复传输。<br>不可靠传输是指不保证数据包的完整性和正确性，即有可能在传输过程中发生丢失、损坏或重复等问题。不可靠传输通常用于传输一些对数据完整性和正确性要求不高的数据，例如音频、视频等媒体数据。<br>在实际应用中，可靠传输和不可靠传输往往会结合使用。例如，Web浏览器使用TCP协议实现可靠传输，在浏览网页时，经常会涉及大量的文本信息传输，需要保证数据的完整性和正确性；而在实时音视频应用中，使用UDP协议实现不可靠传输，在保证实时性的同时，可以避免由于TCP带来的延迟问题。</p><ul><li><strong>接收方控制发送方注入网络的数据量（流量控制）</strong></li></ul><p>在计算机网络中，流量控制主要用于控制数据发送方发送数据的速率，以便接收方能够及时处理和接收数据，并避免由于网络拥塞而导致数据包丢失。<br>流量控制可以通过以下几种方式来实现：<br>1.接收窗口：接收方通过发送通知给发送方来告诉其能够接收多少数据。这个通知称为“窗口”，发送方需要按照窗口大小来发送数据。<br>2.发送窗口：发送窗口用于控制发送方一次性发送多少数据。如果发送窗口的大小小于数据包大小，则发送方需要把数据分成多个小数据包发送。<br>3.拥塞控制：拥塞控制主要用于控制网络拥塞，可以通过控制网络流量来降低网络拥塞的程度。流量控制可以降低发送方发送数据的速率，而拥塞控制则可通过优先级、速率限制和控制包丢失等方式来控制数据流量。其中拥塞控制最常用的算法是TCP协议中的拥塞避免（Congestion Avoidance）和快恢复（Fast Recovery）。<br>4.滑动窗口：滑动窗口是TCP传输协议中的一种流量控制机制，发送方和接收方利用滑动窗口来控制数据传输速率。发送方通过滑动窗口的大小来控制发送数据的数量，接收方通过滑动窗口的大小来控制接收数据的数量。<br>通过以上方式的实现，流量控制可以极大地提高网络通信的可靠性和鲁棒性，保证数据能够稳定快速地传输，并控制网络拥塞的风险。<br><img src="https://pic.imgdb.cn/item/653a671ec458853aef633169.png" alt=""><br><img src="https://pic.imgdb.cn/item/653a672ec458853aef6384ac.png" alt=""></p><h3 id="2-3网络层需要考虑的问题"><a href="#2-3网络层需要考虑的问题" class="headerlink" title="2.3网络层需要考虑的问题"></a>2.3网络层需要考虑的问题</h3><ul><li><strong>标识网络和网络中的各主机（网络和主机共同编制，例如IP地址）</strong></li></ul><p>网络和主机之间的协同合作，可以提高整个系统的执行效率和性能，使得网络系统和主机系统更加稳定和可靠。<br>网络和主机共同编制通常采用以下几种机制：<br>1.任务卸载：主机可以把一些计算任务卸载到网络节点上进行处理，把网络节点作为计算资源的扩展。这种方式可以降低主机的负担，加快计算速度，提高系统的整体性能和可靠性。<br>2.负载均衡：负载均衡通常用于分配网络节点上的任务和服务。负载均衡算法可以确保任务能够在多个网络节点之间均匀分配，降低某个节点的压力，保证整个网络系统的负载均衡。<br>3.数据共享：网络和主机之间可以通过共享数据来协同工作。主机可以把一些需要交互的数据存储在共享数据库中，网络节点可以访问这些数据，以实现任务协同。<br>4.融合计算：融合计算是指网络和主机之间协同完成任务，并采用动态调整资源的方式，提供更完整的服务。网络节点可以将不同的计算资源分别分配给主机，使得计算在网络节点和主机之间灵活地分配和迁移。这种得计算资源的利用率更高，增加系统的可靠性和容错性。<br>通过以上机制的共同使用，网络和主机可以协同合作，实现更高效、更智能的数据处理和服务提供，提升整个系统的性能、可靠性和鲁棒性。</p><ul><li><strong>路由器转发分组（路由选择协议、路由表和转发表）</strong></li></ul><p>路由选择协议（Routing Protocol）是计算机网络中用于选择数据包的最佳路径的一种协议。路由选择协议常用的有RIP、OSPF、BGP等。<br>路由表（Routing Table）是一种用于记录网络中不同地址之间路由关系的数据表。路由表通常包含目标地址、下一跳地址、子网掩码等信息，其中目标地址表示要到达的目标，下一跳地址表示下一条路由器的地址，子网掩码表示目标地址所在的网络子网。<br>转发表（Forwarding Table）是路由器用于转发数据包的表格结构。转发表记录了目的地址前缀和下一跳的信息，当路由器收到一个数据包时，根据数据包的目的地址前缀和转发表中的信息，找到下一跳的地址，将数据包转发给下一跳。<br>路由表和转发表的区别在于，路由表包含网络中所有的可访问路由，而转发表只包含局部路由器需直接转发的下一跳信息。<br>路由选择协议、路由表和转发表共同构成了网络中路由选择和数据包转发的基本机制。通过不同的路由选择协议和路由表配置，可以使得数据包能够以最快速、最可靠的方式到达目的地。<br><img src="https://pic.imgdb.cn/item/653a673fc458853aef63e0df.png" alt=""></p><h3 id="2-4传输层需要考虑的问题"><a href="#2-4传输层需要考虑的问题" class="headerlink" title="2.4传输层需要考虑的问题"></a>2.4传输层需要考虑的问题</h3><ul><li><strong>进程之间基于网络的通信（进程的标识，例如端口号）</strong></li></ul><p>在计算机网络中，进程是指正在运行的程序在计算机中的一个实例，进程之间可以通过网络进行通信和协作。为了在网络中能够准确地识别和寻址进程，需要用到进程的标识。<br>在TCP/IP协议中，进程的标识主要由以下两个部分组成：</p><ol><li>IP地址：IP地址用于标识计算机在网络中的位置，是一种32位或128位的地址，可以唯一标识网络中的每个设备。 </li><li>端口号：端口号用于标识计算机中运行的进程，是一个16位整数。每个进程都有自己的端口号，以便在网络上与其他进程通信和交互。 </li></ol><p>因此，一个进程的标识可以表达为一个由IP地址和端口号组成的二元组，通常写作(IP地址:端口号)的形式，例如，192.168.1.100:5000。<br>在网络通信中，发送方需要知道接收方的IP地址和端口号，以便向正确的进程发送数据包。而接收方则需要在自己的计算机中打开相应的进程，以便接收和处理数据包。进程的标识在网络通信和应用程序开发中起到了重要的作用，是保障网络运行的基石。</p><ul><li><strong>出现传输差错如何处理（可靠传输和不可靠传输）</strong></li></ul><p><img src="https://pic.imgdb.cn/item/653a6750c458853aef643041.png" alt=""></p><h3 id="2-5应用层需要考虑的问题"><a href="#2-5应用层需要考虑的问题" class="headerlink" title="2.5应用层需要考虑的问题"></a>2.5应用层需要考虑的问题</h3><ul><li><strong>不同的数据格式、数据解析、数据处理</strong></li></ul><p>在计算机网络中，不同的数据格式、数据解析和数据处理方式在数据的传输、存储和处理过程中具有重要的意义。</p><ol><li>数据格式：数据在网络中的传输必须采用特定的格式进行编码，才能正确地传递和解释。最常用的数据格式有文本格式、二进制格式和XML格式等。文本格式是基于ASCII字符集编码的，可以被广泛、方便地使用与处理。二进制格式则更适合用于传输二进制数据，如图片、视频等。XML格式则具有良好的可读性和扩展性，被广泛应用于Web领域。 </li><li>数据解析：数据解析是指将收到的数据转换成计算机所能够理解和处理的格式，这个过程需要根据不同的数据格式采用不同的方式进行解析。常用的数据解析方式有模板解析、树形解析和正则表达式解析等。模板解析是指以固定格式来解析数据，树形解析是构建数据解析树来解析数据，而正则表达式解析则是采用正则表达式对数据进行精细的匹配和提取。 </li><li>数据处理：数据处理是指根据数据的具体应用或业务需求，对数据进行加工、转换、筛选等多种数据处理操作。这种处理涉及到数据存储、提取、计算、分析、展示等一系列操作，包括数据加密解密、数据压缩、数据聚合、数据去重和数据分析等。这些操作的目的是提高数据的价值和利用率，以便更好地应用于计算和分析。 </li></ol><p>通过不同的数据格式、数据解析和数据处理方式，网络中的数据可以被有效地传输和处理，增强网络的应用价值和数据处理效率。<br><strong>练习题：</strong><br><img src="https://pic.imgdb.cn/item/653a675ec458853aef647cb3.png" alt=""><br>答案：A C B</p><p>利用<code>ip</code>地址识别各个人的身份信息www<br>边缘节点 解决问题<br>骨干网 数据传输 如何传输<br>应用层<br>表示层        数据加密解密<br>会话层        进程管理<br>传输层    网络层映射接口 1:14<br>网络层     ip层 路由选择<br>数据链路层        网卡 网络接口层 差错控制<br>物理层<br>交换机是网络的最小单位</p><h2 id="三、计算机网络的数据传输"><a href="#三、计算机网络的数据传输" class="headerlink" title="三、计算机网络的数据传输"></a>三、计算机网络的数据传输</h2><h3 id="3-1电路交换"><a href="#3-1电路交换" class="headerlink" title="3.1电路交换"></a>3.1电路交换</h3><p>电路交换：电路交换是将一条物理通路完全预留给两个通信设备之间的数据传输。在数据传输过程中，发送方首先与接收方建立连接，并获取独占的传输通路。数据在传输过程中不会被拆分成小数据包，而是一次性整体传输。一旦连接建立，两端使用的是相同的传输通路，不会被其他设备所占用。电路交换方式可以提供极高的传输速度和连续性，适用于对速度和实时性要求比较高的通信应用，如电话通信。</p><ul><li>建立连接，分配通信资源</li><li>通话，一直占用通信资源</li><li>释放连接，归还通信资源</li></ul><p><img src="https://pic.imgdb.cn/item/653a6774c458853aef64e47f.png" alt=""></p><h3 id="3-2分组交换"><a href="#3-2分组交换" class="headerlink" title="3.2分组交换"></a>3.2分组交换</h3><p>分组交换：分组交换是将数据拆分成若干个数据块，并用一个块头标识不同数据块的传输目的和顺序，然后将这些数据块分别发送到网络中，并在接收方处重新组装为原始数据。数据块在传输时可能被路由器缓存和转发，因此不同数据块的路径和到达时间可能有所不同。分组交换方式与电路交换方式相比，可以更好地利用带宽资源，并且具备灵活性和鲁棒性，适用于互联网等网络中广泛使用的数据通信应用。</p><ul><li>存储转发</li></ul><p>计算机网络中的存储转发（store-and-forward）是一种数据传输方式，它能够保证数据到达目标端点时的完整性和准确性。<br>存储转发方式将数据分为若干个数据包，在传输的过程中需要在每个中间节点缓存数据包，直到完整的数据包都到达之后再一起转发到下一个节点。这个过程中需要对每个数据包进行校验和校验，保证数据的准确性和完整性，若数据包出现错误需要重新发送。<br>存储转发方式可以应用于不同类型的网络环境中，如局域网、广域网和存储区域网络中。与其他数据传输方式相比，存储转发方式的主要优点在于它可以保证数据完成性和数据准确性，在数据传输过程中能够及时检测出错误和丢失的数据包，并进行重传。<br>不过，存储转发方式会带来一定的延迟，因为每个数据包都要在缓存中等待，直到完整的数据包到达为止。此外，由于每个中间节点都需要缓存数据包，这会占用大量的存储空间，降低网络的效率和带宽利用率。<br><img src="https://pic.imgdb.cn/item/653a6789c458853aef655a82.png" alt=""></p><ul><li>优点 <ul><li>没有建立连接和释放连接的过程</li><li>分组传输过程中逐段占用通信链路，有较高的通信线路利用率</li><li>交换节点可以为每一个分组独立选择转发路由，使得网络有很好的生存性</li></ul></li><li>缺点 <ul><li>分组首部带来了额外的传输开销</li><li>交换节点存储转发分组会造成一定的时延</li><li>无法确保通信时端到端通信资源全部可用，在通信量较大时可能造成网络阻塞</li><li>分组可能会出现失序和丢失等问题</li></ul></li></ul><h3 id="3-3对比"><a href="#3-3对比" class="headerlink" title="3.3对比"></a>3.3对比</h3><p><img src="https://pic.imgdb.cn/item/653a67dac458853aef670ee7.jpg" alt=""></p><h2 id="四、计算机网络的性能指标"><a href="#四、计算机网络的性能指标" class="headerlink" title="四、计算机网络的性能指标"></a>四、计算机网络的性能指标</h2><h4 id="4-1速率"><a href="#4-1速率" class="headerlink" title="4.1速率"></a>4.1速率</h4><ul><li>数据量的常用单位有字节（byte，记为大写B） </li><li>速率是指数据的传送速率（即每秒传送多少个比特），也称为数据率（Data Rate）或比特率（Bit Rate） </li><li>速率的基本单位是比特/秒（bit/s，可简记为b/s，有时也记为bps，即bit per second） </li><li>数据量单位中的K、M、G、T的数值分别为210 , 220,230,240 </li><li>速率单位中的k、M、G、T的数值分别为103 , 106,109,1012 </li></ul><p><img src="https://pic.imgdb.cn/item/653a67f0c458853aef67817f.png" alt=""><br>练习：<br><img src="https://pic.imgdb.cn/item/653a6802c458853aef67e2bf.png" alt=""></p><h4 id="4-2带宽"><a href="#4-2带宽" class="headerlink" title="4.2带宽"></a>4.2带宽</h4><ul><li>带宽在模拟信号系统中的意义，某个信号所包含的各种不同频率成分所占据的频率范围。单位：Hz</li><li>带宽在计算机网络中的意义，用来表示网络的通信线路所能<strong>传送数据的能力</strong>，即在单位时间内从网络中的某一点到另一点所能通过的最高数据率。单位：b/s。</li><li>数据传送速率 = min [ 主机接口速率，线路带宽，交换机或路由器的接口速率 ]</li></ul><p><img src="https://pic.imgdb.cn/item/653a6812c458853aef683adb.png" alt=""></p><h4 id="4-3吞吐量"><a href="#4-3吞吐量" class="headerlink" title="4.3吞吐量"></a>4.3吞吐量</h4><ul><li>吞吐量是指单位时间内通过某个网络或接口的时机数据量。吞吐量常被用于对时机网络的测量，以便获知到底有多少数据量通过了网络。</li><li>吞吐量受网络带宽的限制!<br><img src="https://pic.imgdb.cn/item/653a6821c458853aef688720.png" alt=""></li></ul><h4 id="4-4时延"><a href="#4-4时延" class="headerlink" title="4.4时延"></a>4.4时延</h4><ul><li>时延是指数据从网络的一段传送到另一端所耗费的时间，也称为延迟或迟延。数据可由一个或多个分组、甚至是一个比特构成。</li><li>分为：发送时延、传播时延、排队时延、处理时延</li></ul><p><img src="https://pic.imgdb.cn/item/653a6836c458853aef68f648.png" alt=""><br><img src="https://pic.imgdb.cn/item/653a687ec458853aef6a7bc9.jpg" alt=""><br><code>发送时延</code>（Transmission Delay）是指数据位于物理介质中传输所需的时间。<br>发送时延是由以下三个因素决定的：</p><ol><li>数据位数：数据位数是指数据包大小。数据包越大，则在物理介质中传输需要的时间越长。 </li><li>传输速率：传输速率是指数据在物理介质中的传输速度。传输速率越快，则在物理介质中传输所需的时间越短。 </li><li>距离：距离是指数据从发送端到接收端传输所经过的距离。距离越远，则在物理介质中传输所需的时间越长。 </li></ol><p>发送时延可以用以下公式计算：<br>发送时延 = 数据位数 ÷ 传输速率 + 传播时延<br>其中，传播时延是指数据从发送端到接收端在物理介质中传播所需的时间，它与距离有关。例如，对于铜质电缆，光速传播的距离为每秒约300,000公里，因此传播时延也受到距离的制约。<br>发送时延是计算机网络中重要的性能指标之一。在设计和优化网络时，需要考虑传输速率、数据位数和网络拓扑等因素，以尽可能地减少发送时延，提高网络的传输效率。<br><code>传播时延</code>（Propagation Delay）是指数据从发送端到接收端在物理介质中传播所需的时间。<br>在网络中，数据在物理介质中的传播速度是非常快的（例如，在光纤介质中光速大约是每秒 30 万千米），但仍然需要时间，特别是对于大型网络而言。因此，传播时延取决于数据发送和接收之间的距离，也受到物理介质的影响。<br>传播时延可以通过以下公式进行计算：<br>传播时延 = 距离 ÷ 传播速度<br>其中，传播速度是指在物理介质中传播的速度，它通常与介质的物理性质有关，例如电信号在电缆中的传播速度，光信号在光纤中的传播速度等等。<br>可以看到，传播时延是一个距离相关的时间量，对于较大的网络，这个时间量可能很大，并且可能超出其他延迟因素，如排队时延和发送时延等。为了减少传播时延，可以增加网络速度和改变传输介质等方法。然而，在某些情况下，将数据的源和目的地移动到更接近的位置，则是减少传播时延的最可行方法。<br><code>排队时延</code>（Queuing Delay）是指数据在传输过程中因为等待在路由器（或交换机）的队列中而产生的延迟时间。是指分组在经过网络传输时，要经过许多的路由器。但分组在进入路由器后要在输入队列中排队等待处理。在路由器确定了转发接口后，还要在输出队列中排队等待转发。<br>当网络中的数据量比较大，超过了路由器（或交换机）的承载能力时，数据包就会被放置在排队缓冲区中，等待下一次传输。在排队缓冲区中等待数据传输的时间就是排队时延。<br>排队时延受到以下因素的影响：</p><ol><li>网络拥塞程度：当网络拥塞时，路由器的缓冲区可能会由于大量的数据包积压而导致排队时间变长。 </li><li>数据包大小：数据包越大，则需要更多的队列空间进行缓存，也就会导致排队时间加长。 </li><li>队列长度：排队时延还受到排队队列的长度的影响。如果队列长度较短，数据包等待传输的时间也就会减少。 </li></ol><p>排队时延的计算比较复杂，通常需要考虑队列的运行机制以及网络负载等多种因素。在计算机网络中，控制排队时延对于提高网络的传输效率和性能至关重要。为了避免数据包积压，通常需要采取一些流量控制、拥塞控制等机制来限制网络的负载，减少排队时延，提高网络的性能。<br><code>处理时延</code>（Processing Delay）是指数据在网络设备中进行处理所需的时间。<br>网络设备（如路由器、交换机等）在处理数据包时需要进行多种操作，如验证数据包头部、转发路由、执行访问控制等等，这些操作都需要一定的时间。处理时延取决于处理这些操作所需的时间，也与设备的性能和负载等因素有关。<br>处理时延可以通过以下公式来计算：<br>处理时延 = 分组长度 ÷ 处理速率<br>其中，处理速率是网络设备在处理数据包时的速率，它通常与设备的性能有关，例如 CPU 的处理能力、内存的访问速度等等。分组长度是指数据包大小，也就是需要进行处理的数据量。<br>处理时延是计算机网络中一个非常重要的因素，它对网络的传输性能有着直接的影响。通常，处理时延可以通过网络设备的升级和优化来改善。例如，提高设备的处理能力、扩展内存、调整负载均衡机制等等，都可以减少处理时延，提高网络的传输效率。同时，工程师们还可以通过一些协议和算法来控制处理时延，如快速转发协议（Fast Forwarding）等，从而进一步优化网络的性能。</p><h4 id="4-5时延带宽积"><a href="#4-5时延带宽积" class="headerlink" title="4.5时延带宽积"></a>4.5时延带宽积</h4><ul><li>时延带宽积是传播时延和带宽的乘积。</li></ul><p><img src="https://pic.imgdb.cn/item/653a68b9c458853aef6bc946.png" alt=""></p><ul><li>链路的时延带宽积也称为以比特为单位的链路长度，这对我们以后理解以太网的最短帧长是非常有帮助的。</li></ul><h4 id="4-6往返时间"><a href="#4-6往返时间" class="headerlink" title="4.6往返时间"></a>4.6往返时间</h4><ul><li>往返时间（Round-Trip Time，RTT）是指从发送端发送数据分组开始，到发送端收到接收端发来的相应确认分组为止，总共耗费的时间。</li></ul><p>ping 自己的路由器<br><img src="https://pic.imgdb.cn/item/653a68cac458853aef6c27bf.png" alt=""><br>ping www.baidu.com<br><img src="https://pic.imgdb.cn/item/653a68d4c458853aef6c5f13.png" alt=""><br>ping www.kernel.org<br><img src="https://pic.imgdb.cn/item/653a68e4c458853aef6caf70.png" alt=""></p><h4 id="4-7利用率"><a href="#4-7利用率" class="headerlink" title="4.7利用率"></a>4.7利用率</h4><ul><li>链路利用率，链路利用率是指某条链路有百分之几的时间是被利用的（即有数据通过）。完全空闲的链路的利用率为零。</li><li>网络利用率，网络利用率是指网络中所有链路的链路利用率的加权平均。</li></ul><h2 id="五、计算机网络数据封包和解包"><a href="#五、计算机网络数据封包和解包" class="headerlink" title="五、计算机网络数据封包和解包"></a>五、计算机网络数据封包和解包</h2><p><img src="https://pic.imgdb.cn/item/653a6789c458853aef655a82.png" alt=""><br><img src="https://pic.imgdb.cn/item/653a694ac458853aef6ebb7f.png" alt=""><br>答案：A<br>400/400+20(表示层)+20（会话层）+20（运输层）+20（网络层）+20（数据链路层） = 80%<br><code>pdu</code>：协议数据单元</p><h2 id="六、网络体系的术语"><a href="#六、网络体系的术语" class="headerlink" title="六、网络体系的术语"></a>六、网络体系的术语</h2><p><strong>实体</strong></p><ul><li>实体是指任何可发送或接收信息的硬件或软件<strong>进程</strong>。</li><li>对等实体是指通信双方相同层次中的实体。</li></ul><p><img src="https://pic.imgdb.cn/item/653a695ac458853aef6f0c18.png" alt=""><br><strong>协议</strong></p><p><img src="https://pic.imgdb.cn/item/653a69c9c458853aef7132da.jpg" alt=""><br><img src="https://pic.imgdb.cn/item/653a6969c458853aef6f519c.png" alt=""></p><ul><li>协议是控制两个对等实体在“水平方向” 进行“逻辑通信”的规则的集合。 </li><li>协议的三要素 <ul><li>语法，定义所交换信息的格式</li></ul></li></ul><p>语法（Syntax）：语法指的是网络协议中的消息格式，包括消息的结构、数据组成方式、数据类型等等。语法规定了消息的格式和正确的组织方式，确保不同计算机间的通信信息能够被识别和解释。 </p><ul><li>语义，定义通信双方所要完成的操作</li></ul><p>语义（Semantics）：语义指的是网络协议中的消息含义，即消息中所包含的信息和它们的含义。语义规定了计算机之间通信信息的意义和目的，确保信息间的交流是有意义的和准确的。 </p><ul><li>同步（时序），定义通信双方的时序关系</li></ul><p>时序（Timing）：时序指的是网络协议中消息的顺序和时间间隔，它规定了在不同状态之间通信所需的时间和消息在不同状态下的处理顺序。时序规定消息的传输时间、延迟要求和多路许可等条件，确保通信行为按照正确的顺序进行。</p><p>：如何解析数据</p><p><img src="https://pic.imgdb.cn/item/653a69e8c458853aef71dd31.jpg" alt=""><br><strong>服务</strong></p><ul><li>协议是“水平”的，而服务是“垂直”的。</li><li>实体看得见下层提供的服务，但并不知道实现该服务的具体协议。下层的协议对上层的实体是“透明”的。</li><li>对等层次之间传送的数据包称为该层的协议数据单元（Protocol Data Unit，PDU）。</li><li>同一系统内层与层之间交换的数据包称为服务数据单元（Service Data Unit，SDU）。</li></ul><p><img src="https://pic.imgdb.cn/item/653a6a09c458853aef729abb.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cs基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
